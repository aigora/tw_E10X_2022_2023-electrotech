//AQUI ESTA EL CODIGO  DE  INCIAR SESION PROBADO EN  UN PROGRAMA EXTERNO:

//FUNCION PARA INICIAR SESION


//primero pedimos al usuario que nos ponga una contraseña

//esta la escribimos en un fichero

//comparamos fichero1 (que es en el que esta la nueva contraseña) con un fichero existente con la contraseña


//ya he cambiado todas las ficheroinicial por pf

#include <stdio.h>
#include <string.h>


typedef struct
{
	char nombre[100];
	char contrasena[100];
}usuario;


usuario datos[100]; //vector para guardar el nombre y la contraseña para posteriormente pasarlo al fichero


int reconocerfichero(usuario datos[], int *numusuarios) //le he cambio el prototipo
{
	FILE * pf;

	int i;
	pf = fopen("usuario.txt","r");

	if(pf==NULL)
    {
		printf("No hay ningun fichero para abrir.\n");
    return 0; //devolvemos,para en el main indicar que el programa se termina ya que no existe fichero
	}

	i=0;

	while(fscanf(pf,"%s %s\n",&datos[i].nombre,&datos[i].contrasena)!=EOF)//comprobamos los usuarios ya registrados,y hacemos un contador
    {
	i++;
	}

	*numusuarios=i; //NO ENTIENDO

	fclose(pf); //cerramos el fichero
	return 1;//devolvemos 1,para indicar en el main que el programa puede seguir correctamente
}


void registrar(char printnombre[], int *numusuarios, usuario datos[]) //que es y porque utiliza punteros, hay una coma que no entiendo
{

	FILE * pf;

	int i;
	int rep=0;//numero entero para comprobar si hay usuario o contraseña ya introducido
	char printcontrasena[100];//vector tipo caracter para almacenar la contraseña introducida por el usuario
	do
        {
		printf("Introduzca su nombre nuevo:\n");
		fflush(stdin);

		scanf("%s",printnombre);
		for(i=0;i<*numusuarios;i++)
        {
			if(strcmp(printnombre,datos[i].nombre)==0) //comparamos con lo que hay en el fichero y el nombre que ha introducido el usuario
                {
				rep=1;
				break;
			    }
			else
                {
				rep=0;
			    }
		}

		if(rep==1)
        {
			printf("Ya existe este nombre.Intentalo de nuevo.\n");
		}
		else
		{
			printf("Usuario valido\n");
			printf("Vas a ser el jugador %i registrado en este juego.\n",i+1); //por eso lo declaramos como vector, para que se pueda hacer mas veces y se guarden todas, he puesto %i
			strcpy(datos[*numusuarios].nombre,printnombre);//con la libreria string.h,lo copiamos a nuestra estrucutra con su posicion correspondiente
		}

	}
	while(rep==1);
do
{
	printf("Introduzca una contrase%ca:\n",164); //que es esto de 164
	fflush(stdin);
	scanf("%s",printcontrasena);

	for(i=0;i<*numusuarios;i++)
        {
			if(strcmp(printcontrasena,datos[i].contrasena)==0)//comparamos si ya esta esa contraseña en el fichero
            {
				rep=1;
				break;
            }
			else
                {
				rep=0;
			    }
        }

		if(rep==1)
        {
			printf("Ya existe esta contrase%ca.Intentalo de nuevo.\n",164);
		}
		else
		{

			strcpy(datos[*numusuarios].contrasena,printcontrasena);

            pf= fopen("usuario.txt","w");//modo escritura, con esto se borra lo anterior ¿no?

	for(i=0;i<=*numusuarios;i++)
    {
		fprintf(pf,"%s %s\n",datos[i].nombre ,datos[i].contrasena);//lo imprimimos en el fichero

	}

	fclose(pf); //cerramos el fichero
    }
}while(rep==1);//no se sale del bucle hasta que el usuario,introduzca un nick y una contraseña no repetida
}



void login(char printnombre[], int *numusuarios,usuario datos[])
{

	int i;
	int rep=0;
	char printcontrasena[200];
	do
        {
		printf("Introduzca su nombre:\n");
		fflush(stdin);
		scanf("%s",printnombre);
		printf("Introduzca su contrase%ca:\n",164);
		fflush(stdin);
		scanf("%s",printcontrasena);

		for(i=0;i<*numusuarios;i++)
            {
			if(strcmp(printnombre,datos[i].nombre)==0 && strcmp(printcontrasena,datos[i].contrasena)==0)//comprobar si esta en el fichero
            {
				rep=1;
				break;
			}
        else
            {
				rep=0;
			}
		    }

		if(rep==0)
            {
			printf("Datos incorrectos.\n");
		    }
		    else
		    {
			printf("Datos correctos.\n");
			printf("Eres el jugador %i registrado en el juego.\n",i+1);
		    }

	  }
	  while(rep==0);

}


DE CABECERAS PONDREMOS LO SIGUIENTE EN LA FUNCION.H

typedef struct
{
	char nombre[100];
	char contrasena[100];
}usuario;

usuario datos[100];

int reconocerfichero(usuario datos[], int *numusuarios);

void iniciarsesion(char printnombre[], int *numusuarios,usuario datos[]); //porque aqui hay una coma

void registrar(char printnombre[], int *numusuarios,usuario datos[]);


FINALMENTE LLAMAMOS A LAS FUNCINOES CON EL MENU PRINCIPAL

#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include "INICIOSESION.h"


int main(){

    int op;
    char printnombre[100];
    int numsuarios=0;

    usuario datos[100];

     printf("BIENVENIDO\n");
     printf("\n");
     printf("Estas en el menu,elija una opcion por favor:\n");
     printf("\n");
     printf("Pulse 1 si quiere iniciar el juego.\n");
     printf("Pulse 2 si quiere salir del juego.\n");

     do
     {
        fflush(stdin);
        scanf("%d",&op);
     }

     while(op!=1&&op!=2);

     switch(op)
     {
     case 1:
         {
             printf("Ha iniciado el juego.\n");
             printf("Debe registrarse (pulsando 1) o iniciar sesion (pulsando 2).\n");
             do
             {
                 fflush(stdin);
             scanf("%d",&op);
             }
             while((op!=1)&&(op!=2));
             switch(op)
             {
             case 1:
                 {
                    if(reconocerfichero(datos,&numsuarios)==0)
                        {
                            return 0; //se acaba el programa si no hay fichero

                        }
                    else
                    {
                        registrar(printnombre,&numsuarios,datos);
                    }
                    break;
                 }
             case 2:
                {
                   if(reconocerfichero(datos,&numsuarios)==0)
                    {
                     return 0; //se acaba el programa si no hay fichero
                    }
                    else
                    {
                    login(printnombre,&numsuarios,datos);
                    }
                    break;
                }
             }
         }

     printf("\n");

 }

}



















